openapi: 3.0.3
info:
  description: |
    Cities a little toy project what showcases how to build a simply
    REST API using nodejs, expressjs and Docker. It has automated API test
    suite built using frisbyjs test framework.
    This simply API can be used to save and query
    continents, countries and cities in hierarchical order.

    For more documentation see README.md in the project repository.
  version: 1.0.0
  title: Cities API
  license:
    name: MIT
servers:
- url: http://localhost:3000
paths:
  /:
    get:
      tags:
        - Cities API
      summary: Lists all continents
      operationId: getContinents
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                  type: array
                  description: Array of continents
                  items:
                    type: string
    post:
      tags:
        - Cities API
      summary: Adds a new continent
      operationId: addContinent
      parameters:
        - in: query
          name: continentName
          description: Name of the created continent
          required: true
          schema:
            type: string
      responses:
        '201':
          description: "Success: URI to the created continent is returned in the Location HTTP header."
        '400':
          description: Input parameter missing.
        '409':
          description: Continent already exists.
  /{continentName}:
    delete:
      tags:
        - Cities API
      summary: Deletes a continent
      operationId: deleteContinent
      parameters:
      - name: continentName
        in: path
        description: Name of the continent to be deleted
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
        '404':
          description: Continent not found
    get:
      tags:
        - Cities API
      summary: Lists all the countries in a continent.
      operationId: listCountries
      parameters:
      - name: continentName
        in: path
        description: Name of the continent from which the countries are listed
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                  type: array
                  description: Array of continents
                  items:
                    type: string
        '404':
          description: Continent not found
    post:
      tags:
        - Cities API
      summary: Creates a new country
      operationId: createCountry
      parameters:
      - name: continentName
        in: path
        description: Name of the continent where the country is added to
        required: true
        schema:
          type: string
      - name: countryName
        in: query
        description: Name of the country to be created.
        required: true
        schema:
          type: string
      responses:
        '201':
          description: "Success: URI to the created continent is returned in the Location HTTP header."
        '400':
          description: Input parameter countryName missing.
        '409':
          description: Country already exists.
  /{continentName}/{countryName}:
    delete:
      tags:
        - Cities API
      summary: Deletes a country.
      operationId: deleteCountry
      parameters:
      - name: continentName
        in: path
        description: Name of the continent where the country is located in
        required: true
        schema:
          type: string
      - name: countryName
        in: path
        description: Name of the country to be deleted.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
        '404':
          description: Country or continent not found
    get:
      tags:
        - Cities API
      summary: Retrieves a list of cities in a country
      operationId: getCities
      parameters:
      - name: continentName
        in: path
        description: Name of the continent where the country is located in
        required: true
        schema:
          type: string
      - name: countryName
        in: path
        description: Name of the country, which cities are retrieved.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
        '404':
          description: Country not found
    post:
      tags:
        - Cities API
      summary: Creates a new city to a country.
      operationId: AddCity
      parameters:
      - name: continentName
        in: path
        description: Name of the continent where the country is located in
        required: true
        schema:
          type: string
      - name: countryName
        in: path
        description: Name of the country, in which a city is being added.
        required: true
        schema:
          type: string
      responses:
        '201':
          description: "Success: URI to the created city is returned in the Location HTTP header."
        '400':
          description: Input query parameter missing.
        '409':
          description: City already exists.
  /{continentName}/{countryName}/{cityName}:
    delete:
      tags:
        - Cities API
      summary: Deletes a city.
      operationId: deleteCity
      parameters:
      - name: continentName
        in: path
        description: Name of the continent where the country is located in
        required: true
        schema:
          type: string
      - name: countryName
        in: path
        description: Name of the country, from which a city is being deleted.
        required: true
        schema:
          type: string
      - name: cityName
        in: path
        description: Name of the city, which is being deleted.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
        '404':
          description: City not found
